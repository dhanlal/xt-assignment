{"version":3,"sources":["logo.svg","homepage/Sidebar.js","homepage/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","handleFilter","bind","state","launch_success","land_success","launch_year","params","queryString","parse","this","props","location","search","console","log","history","URLSearchParams","Object","keys","length","setState","applyFilter","event","target","name","value","push","pathname","stringify","items","className","map","year","id","key","onClick","Component","withRouter","Homepage","error","isLoaded","message","item","flight_number","src","links","mission_patch_small","mission_name","mission_id","rocket","first_stage","cores","App","filterObject","getSpacexData","url","fetch","then","res","json","result","path","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.849352c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component } from 'react';\nimport './homepage.css';\nimport queryString from 'query-string';\n// import { withRouter } from 'react-router';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    withRouter\n  } from \"react-router-dom\";\nclass Sidebar extends Component{\n  constructor(){\n      super();\n      this.handleFilter = this.handleFilter.bind(this);\n      this.state ={\n        // items: [],\n        launch_success:null,\n        land_success:null,\n        launch_year: null\n      }\n  }\n  componentDidMount(){\n    let params = queryString.parse(this.props.location.search)\n       console.log(this.props.history.location.search, new URLSearchParams(this.props.location.search) ,params)\n    if(Object.keys(params).length){\n        this.setState({\n            ...params\n        },() => this.props.applyFilter(this.state))\n\n    }\n\n\n  }\n  handleFilter(event){\n      const {name, value} =event.target;\n      this.setState(\n          {\n              [name] : value\n\n          },()=> {\n            this.props.applyFilter(this.state)\n            this.props.history.push({\n                pathname: '/',\n                search: queryString.stringify(this.state)\n            })\n          }\n      )\n\n  }\n  render(){\n    let launchYear = [2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020];\n    const { items } = this.state;\n    return(\n        <div className=\"sidebar-main-1\">\n            <span> Filter </span>\n            <div className=\"sidebar\">\n               <span> Lunch Year</span>\n                <div className=\"main-2\">\n                {\n                    launchYear.map(year => (\n                        <div className=\"year-bt\" id={year} key={year}>\n                            <button  value={year} name=\"launch_year\" onClick = {this.handleFilter}>{year}</button>\n                        </div>\n                    ))\n                }\n                {/* </div> */}\n                <span className=\"spacex-launch\">Successful Launch</span>\n                  <hr />\n                {/* <div> */}\n                <div className=\"year-bt\">\n                    <button name=\"launch_success\" value=\"true\"  onClick = {this.handleFilter}>True</button>\n                    <button name=\"launch_success\" value=\"false\"  onClick = {this.handleFilter}>False</button>\n                </div>\n                {/* </div> */}\n                <span>Successful Landing</span>\n                {/* <div> */}\n                <div className=\"year-bt\">\n                    <button name=\"land_success\" value=\"true\"  onClick = {this.handleFilter}>True</button>\n                    <button name=\"land_success\" value=\"false\" onClick = {this.handleFilter}>False</button>\n                </div>\n                </div>\n            </div>\n        </div>\n       );\n\n  }\n}\n\nexport default withRouter(Sidebar);","import React, {Component} from 'react';\nimport './homepage.css';\n\nclass Homepage extends Component{\n\n    render(){\n\n     const { error, isLoaded, items } = this.props;\n      if (error) {\n\n        return <div>Error: {error.message}</div>;\n      } else if (isLoaded) {\n\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <div className=\"main\" id=\"main\">\n            {/* <div> */}\n                 {items.map((item) => (\n                    <div className=\"card\" key={item.flight_number}>\n                        <div className=\"space-img\"><img src={item.links.mission_patch_small} /></div>\n                        <div className=\"container\">\n                        <h4 ><b>{item.mission_name} #{item.flight_number}</b></h4>\n                        <div className=\"data\"><level className=\"space-la\">Mission Id:</level> <span>{item.mission_id}</span></div>\n                        <div className=\"data\"> <level className=\"space-la\">Launch Year:</level> <span>{item.launch_year}</span></div>\n                        <div className=\"data\"><level className=\"space-la\"> Successful Launch: </level><span>{\"\" + item.launch_success}</span></div>\n                        <div className=\"data\"> <level className=\"space-la\">Successful Landing:</level> <span>{item.rocket.first_stage.cores[0].land_success === true ? \"True\" : \"False\"}</span></div>\n\n                    </div>\n                    </div>\n\n                ))}\n          </div>\n        );\n      }\n    }\n}\n\nexport default Homepage;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Sidebar from './homepage/Sidebar';\nimport Homepage from './homepage/Homepage';\nimport { findByTestId } from '@testing-library/react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  withRouter\n} from \"react-router-dom\";\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state ={\n      error: null,\n      isLoaded: true,\n      items: [],\n    }\n}\n  componentDidMount(){\n    this.getSpacexData();\n  }\n  getSpacexData(filterObject={}){\n    this.setState({isLoaded: true})\n    let url = \"https://api.spaceXdata.com/v3/launches?limit=10\";\n    Object.keys(filterObject).map(key => {\n      const value = filterObject[key]\n      if(value){\n        url = `${url}&${key}=${value}`\n      }\n    })\n    fetch(url)\n    .then(res => res.json())\n    .then(\n      (result) => {\n         console.log(result, filterObject)\n        this.setState({\n          isLoaded: false,\n          items: result\n        });\n      },\n        (error) => {\n          this.setState({\n            isLoaded: false,\n            error\n          });\n        }\n      )\n  }\n  applyFilter = (filterObject) =>{\n        // console.log(filterObject);\n        this.getSpacexData(filterObject)\n  }\n\n render(){\n  const { error, isLoaded, items } = this.state;\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n\n          <div className=\"sidebar-main\">\n            <Sidebar\n            applyFilter = {this.applyFilter}\n            />\n\n          </div>\n          <div className=\"homepage\">\n              <Homepage\n              error = {error}\n              isLoaded = {isLoaded}\n              items = {items}\n              />\n          </div>\n          </Route>\n        </Switch>\n      </Router>\n\n\n    </div>\n  );\n }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}