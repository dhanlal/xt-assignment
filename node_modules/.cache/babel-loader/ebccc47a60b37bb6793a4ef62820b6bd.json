{"ast":null,"code":"var _jsxFileName = \"/home/deepa/xtassignment/src/homepage/Sidebar.js\";\nimport React, { Component } from 'react';\n\nclass Sidebar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.spaceXdata.com/v3/launches?limit=100\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    let launchYear = [];\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    items.map(year => launchYear[year.launch_year] = year.launch_year);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, launchYear.map(t => /*#__PURE__*/React.createElement(\"button\", {\n      name: \"b1\",\n      value: \"2006\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, t))));\n  }\n\n}\n\n{\n  /* <div className=\"sidebar\">\n            <div className=\"main-2\">\n                {\n                    [0,1,2,3,4,5,6].map(row => (\n                        <div className></div>\n                    ))\n                }\n                <div>\n                    <button name=\"b1\" value=\"2006\" >2006</button>\n                </div>\n             </div>\n        </div> */\n}\nexport default Sidebar;","map":{"version":3,"sources":["/home/deepa/xtassignment/src/homepage/Sidebar.js"],"names":["React","Component","Sidebar","constructor","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","launchYear","map","year","launch_year","t"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA+B,OAA/B;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAC7BE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAY;AACVC,MAAAA,KAAK,EAAE,IADG;AAEVC,MAAAA,QAAQ,EAAE,KAFA;AAGVC,MAAAA,KAAK,EAAE;AAHG,KAAZ;AAKH;;AACDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,kDAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KARH,EASGR,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAdH;AAgBD;;AACDU,EAAAA,MAAM,GAAE;AACN,QAAIC,UAAU,GAAG,EAAjB;AACA,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;AACGG,IAAAA,KAAK,CAACU,GAAN,CAAUC,IAAI,IACXF,UAAU,CAACE,IAAI,CAACC,WAAN,CAAV,GAA+BD,IAAI,CAACC,WADvC;AAGH,wBACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACO;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAECH,UAAU,CAACC,GAAX,CAAeG,CAAC,iBACZ;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,KAAK,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCA,CAAjC,CADJ,CAFD,CADP,CADA;AAWD;;AA5C4B;;AA+C/B;AAAC;;;;;;;;;;;;AAWgB;AACjB,eAAelB,OAAf","sourcesContent":["import React,{Component } from 'react';\n\nclass Sidebar extends Component{\n  constructor(){\n      super();\n      this.state ={\n        error: null,\n        isLoaded: false,\n        items: []\n      }\n  }\n  componentDidMount(){\n    fetch(\"https://api.spaceXdata.com/v3/launches?limit=100\")\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          items: result\n        });\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n  }\n  render(){\n    let launchYear = [];\n    const { error, isLoaded, items } = this.state;\n       items.map(year => (\n          launchYear[year.launch_year] = year.launch_year\n          ))\n    return(\n    <div className=\"sidebar\">\n           <div className=\"main-2\">\n           {\n            launchYear.map(t => (\n                <button name=\"b1\" value=\"2006\" >{t}</button>\n            ))\n            }\n            </div>\n       </div>\n       );\n  }\n}\n\n{/* <div className=\"sidebar\">\n           <div className=\"main-2\">\n               {\n                   [0,1,2,3,4,5,6].map(row => (\n                       <div className></div>\n                   ))\n               }\n               <div>\n                   <button name=\"b1\" value=\"2006\" >2006</button>\n               </div>\n            </div>\n       </div> */}\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}